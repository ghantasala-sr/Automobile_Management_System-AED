/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Manufacturer;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.InventoryOrderRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author srinivasarithikghantasala
 */
public class ManufacturerWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManufacturerWorkAreaJPanel
     */
    JPanel workArea;
    EcoSystem system;
    UserAccount account;
    Organization organization;
    Enterprise enterprise;
    public ManufacturerWorkAreaJPanel(JPanel workArea, UserAccount account,Organization organization,Enterprise enterprise , EcoSystem system) {
        initComponents();
        this.workArea = workArea;
        this.system = system;
        this.account = account;
        this.organization = organization;
        this.enterprise = enterprise;
        populateRequestTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
        public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) tblWorkArea.getModel();
        
        model.setRowCount(0);

        for(Network network:system.getNetworkList()){
            for(Enterprise ent: network.getEnterpriseDirectory().getEnterpriseList()){
                if (ent.getName().equals(enterprise.getName())){
                    for(Organization org: ent.getOrganizationDirectory().getOrganizationList()){
                        if(org.getName().equals(organization.getName())){
                            for(InventoryOrderRequest req : org.getInventoryOrderQueue().getInventoryOrderRequestList()){
                                    Object[] row = new Object[6];
                                    row[0] = req;
                                    row[1] = req.getCar().getModel();
                                    row[2] = req.getQuantity();
                                    row[3] = req.getManufacturer()==null?"None":req.getManufacturer().getUsername();
                                    row[4] = req.getDistributor()==null?"None":req.getDistributor().getUsername();
                                    row[5] = req.getStatus();

                                    model.addRow(row);
                            }
                        }
                    }
                    
                }
            }
        }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblWorkArea = new javax.swing.JTable();
        btnAssign = new javax.swing.JButton();
        btnManf = new javax.swing.JButton();
        btnViewOrder = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        tblWorkArea.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Model", "Quantity", "Assigned Manufacturer", "Distributor", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblWorkArea);

        btnAssign.setText("Assign to me");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        btnManf.setText("Manufactured");
        btnManf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManfActionPerformed(evt);
            }
        });

        btnViewOrder.setText("View Order");
        btnViewOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewOrderActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel1.setText("Manufacturer Work Area");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(416, 416, 416)
                        .addComponent(jLabel1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnAssign)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnViewOrder)
                            .addGap(287, 287, 287)
                            .addComponent(btnManf, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 950, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAssign)
                    .addComponent(btnViewOrder)
                    .addComponent(btnManf))
                .addGap(126, 126, 126))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblWorkArea.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Pick a selected row", "Information", JOptionPane.INFORMATION_MESSAGE);
        
            return;
        }
        
        InventoryOrderRequest req = (InventoryOrderRequest)tblWorkArea.getValueAt(selectedRow, 0);
        if(req.getManufacturer() != null){
            JOptionPane.showMessageDialog(this, "Already assigned", "Information", JOptionPane.INFORMATION_MESSAGE);
        return;
        }
        req.setManufacturer(account);
        req.setStatus("Manf. assigned");
        populateRequestTable();
        
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnManfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManfActionPerformed
        // TODO add your handling code here:
                int selectedRow = tblWorkArea.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Pick a selected row", "Information", JOptionPane.INFORMATION_MESSAGE);
        
            return;
        }
        
        InventoryOrderRequest req = (InventoryOrderRequest)tblWorkArea.getValueAt(selectedRow, 0);
        if(req.getManufacturer() != account){
            JOptionPane.showMessageDialog(this, "It is not assigned!!", "Information", JOptionPane.INFORMATION_MESSAGE);
        return;
        }
        else if (req.getManufacturer() == account && req.getIsManf()==false){
            req.setStatus("Manufactured Done !!");
            req.setIsManf(true);
            JOptionPane.showMessageDialog(this, "Status Updated !!", "Information", JOptionPane.INFORMATION_MESSAGE);
            populateRequestTable();
            return;
        }
        else if(req.getIsManf()==true){
            JOptionPane.showMessageDialog(this, "Already Manufactured!!", "Information", JOptionPane.INFORMATION_MESSAGE);
        return;
        }
        populateRequestTable();
        
    }//GEN-LAST:event_btnManfActionPerformed

    private void btnViewOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewOrderActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblWorkArea.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Pick a selected row", "Information", JOptionPane.INFORMATION_MESSAGE);
        
            return;
        }
        
        InventoryOrderRequest req = (InventoryOrderRequest)tblWorkArea.getValueAt(selectedRow, 0);
        
        
        ViewOrderInfoJPanel viojp = new ViewOrderInfoJPanel(workArea, req);
        workArea.add("ViewOrderInfoJPanel",viojp);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.next(workArea);
        
    }//GEN-LAST:event_btnViewOrderActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnManf;
    private javax.swing.JButton btnViewOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblWorkArea;
    // End of variables declaration//GEN-END:variables
}
