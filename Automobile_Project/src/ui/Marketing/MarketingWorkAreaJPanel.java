/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Marketing;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PricingOrderRequest;
import Business.WorkQueue.QuoteOrderRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author srinivasarithikghantasala
 */
public class MarketingWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form MarketingWorkAreaJPanel
     */
     JPanel workArea;
    EcoSystem system;
    UserAccount account;
    public MarketingWorkAreaJPanel(JPanel workArea, UserAccount account, EcoSystem system) {
        initComponents();
        this.workArea = workArea;
        this.system = system;
        this.account = account;
        populateRequestTable();
        
    }
    
    private void populateRequestTable(){
                DefaultTableModel model = (DefaultTableModel) tblWorkArea.getModel();
        
        model.setRowCount(0);

        for(Network network:system.getNetworkList()){
            for(Enterprise enterprise: network.getEnterpriseDirectory().getEnterpriseList()){
                if (Enterprise.EnterpriseType.Dealer.equals(enterprise.getEnterpriseType())){
                    for(Organization org: enterprise.getOrganizationDirectory().getOrganizationList()){
                        if(org.getName().equals("Sales Organization")){
                            for(PricingOrderRequest req : org.getPriceOrderQueue().getPriceOrderList()){
                                
                                    Object[] row = new Object[5];
                                    row[0] = req;
                                    row[1] = req.getQuoteOrderId();
                                    row[2] = req.getCar().getModel();
                                    row[3] = req.getMarketing()==null?"None":req.getMarketing().getUsername();
                                    row[4] = req.getIsPriceGiven();
                                    model.addRow(row);
                                
                                   

                                    
                            }
                        }
                    }
                    
                }
            }
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblWorkArea = new javax.swing.JTable();
        btnAssign = new javax.swing.JButton();
        txtFloor = new javax.swing.JTextField();
        txtCeiling = new javax.swing.JTextField();
        txtTarget = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        tblWorkArea.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Price Id", "Quote Id", "Model", "Assigned to", "Price Given"
            }
        ));
        jScrollPane1.setViewportView(tblWorkArea);

        btnAssign.setText("Assign to me");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        jLabel1.setText("Floor Price");

        jLabel2.setText("Ceiling Price");

        jLabel3.setText("Target Price");

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel15.setText("Marketing Work Area");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAssign)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(36, 36, 36)
                                .addComponent(txtFloor, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(104, 104, 104))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtTarget, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtCeiling, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(104, 104, 104))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnSubmit)
                                .addGap(152, 152, 152))))))
            .addGroup(layout.createSequentialGroup()
                .addGap(432, 432, 432)
                .addComponent(jLabel15)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFloor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCeiling, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtTarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(34, 34, 34)
                        .addComponent(btnSubmit))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33)
                .addComponent(btnAssign)
                .addContainerGap(179, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblWorkArea.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Pick a selected row", "Information", JOptionPane.INFORMATION_MESSAGE);

            return;
        }

        PricingOrderRequest req = (PricingOrderRequest)tblWorkArea.getValueAt(selectedRow, 0);
        if(req.getMarketing() != null){
            JOptionPane.showMessageDialog(this, "Already assigned", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        req.setMarketing(account);
        populateRequestTable();
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblWorkArea.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Pick a selected row", "Information", JOptionPane.INFORMATION_MESSAGE);

            return;
        }
   PricingOrderRequest req = (PricingOrderRequest)tblWorkArea.getValueAt(selectedRow, 0);
       if(req.getMarketing() != account){
            JOptionPane.showMessageDialog(this, "It is not assigned to you!!", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        else if (req.getMarketing() == account && req.getIsPriceGiven()==false ){
            // Check if fields are empty
if (txtFloor.getText().trim().isEmpty() || txtCeiling.getText().trim().isEmpty() || txtTarget.getText().trim().isEmpty()) {
    JOptionPane.showMessageDialog(this, "All fields (Floor, Ceiling, and Target) must be filled.", "Warning", JOptionPane.WARNING_MESSAGE);
    return;
}

try {
    int floor = Integer.parseInt(txtFloor.getText().trim());
    int ceil = Integer.parseInt(txtCeiling.getText().trim());
    int target = Integer.parseInt(txtTarget.getText().trim());

    // Validate that floor <= target < ceil
    if (floor > target || target >= ceil) {
        JOptionPane.showMessageDialog(this, "Ensure Floor <= Target < Ceiling.", "Warning", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // If valid, set the values in the request
    req.setCeilingPrice(ceil);
    req.setFloorPrice(floor);
    req.setTargetPrice(target);

    JOptionPane.showMessageDialog(this, "Values set successfully!", "Information", JOptionPane.INFORMATION_MESSAGE);

} catch (NumberFormatException e) {
    // Handle invalid number input
    JOptionPane.showMessageDialog(this, "Please enter valid numeric values for Floor, Ceiling, and Target.", "Warning", JOptionPane.WARNING_MESSAGE);
    return;
}

            
            req.setIsPriceGiven(true);
            populateRequestTable();
            return;
        }
        else if(req.getIsPriceGiven()==true){
            JOptionPane.showMessageDialog(this, "Price is already given, cannot change !!", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        populateRequestTable();

    }//GEN-LAST:event_btnSubmitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblWorkArea;
    private javax.swing.JTextField txtCeiling;
    private javax.swing.JTextField txtFloor;
    private javax.swing.JTextField txtTarget;
    // End of variables declaration//GEN-END:variables
}
